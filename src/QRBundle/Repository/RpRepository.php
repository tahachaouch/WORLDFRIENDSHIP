<?php

namespace QRBundle\Repository;

/**
 * QRRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RpRepository extends \Doctrine\ORM\EntityRepository
{




    public  function  getReponseParIdQuestion($id_q){

        $rawSql = "SELECT r.id,id_question,id_reponse,date_reponse,contenu_reponse,etat_reponse,username,(SELECT SUM(rate)  FROM rating where rating.id_reponse=r.id_reponse) as somme_r,(SELECT SUM(unrate)  FROM rating where rating.id_reponse=r.id_reponse) as somme_ur FROM reponse r join fos_user on r.id=fos_user.id WHERE (id_question=$id_q AND etat_reponse=1) ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute([]);

        return $stmt->fetchAll();



    }



    public function getNbreReponseParQuestion($id_q)
    {

        $rawSql="SELECT COUNT(id_reponse) as nr FROM reponse where etat_reponse=1 and id_question=$id_q";

        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute([]);

        return $stmt->fetchAll();

    }




    public function supprimerReponse($id_r)
    {
        $rawSql1="UPDATE reponse set etat_reponse=0 WHERE id_reponse=$id_r";
       // $rawSql2="UPDATE rating set (rate=0 AND unrate=0) WHERE id_reponse=$id_r";

        $this->getEntityManager()->getConnection()->executeUpdate($rawSql1);
     //   $this->getEntityManager()->getConnection()->executeUpdate($rawSql2);
    }




    public function modifierReponse($id_r,$contenu_r)
    {

        $rawSql="UPDATE reponse SET contenu_r=$contenu_r  WHERE id_reponse=$id_r";

        $stmt = $this->getEntityManager()->getConnection()->executeUpdate($rawSql);


        return $stmt;

    }



  /*  public  function  getReponseParIdReponse($id_r){

        $rawSql = "SELECT * FROM reponse WHERE id_reponse=$id_r";

        $stmt = $this->getEntityManager()->getConnection()->prepare($rawSql);
        $stmt->execute([]);

        return $stmt->fetchAll();



    }*/

}